---
name: release

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to release
  repository_dispatch:
    types:
      - release

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
          registry-url: 'https://registry.npmjs.org'
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Node modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive
      - name: Serverless deploy production
        run: yarn run deploy
        if: ${{ github.event.inputs.environment == 'production' || github.event.client_payload.environment == 'production' }}
        env:
          SERVERLESS_STAGE: prod
      - name: Serverless deploy staging
        run: yarn run deploy
        if: ${{ github.event.inputs.environment == 'staging' || github.event.client_payload.environment == 'staging' }}
        env:
          SERVERLESS_STAGE: stg

